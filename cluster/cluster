#!/bin/bash

scripts=$(dirname $0)/scripts
command=$1
shift

network=$(docker network ls | grep cluster)
if [ -z "$network" ]; then
  docker network create cluster
fi

case "$command" in
  
  zookeeper)
    $scripts/zookeeper $@
  ;;
  
  namenode)
    $scripts/namenode $@
  ;;
  
  zkfc)
    $scripts/zkfc $@
  ;;
  
  datanode)
    $scripts/datanode $@
  ;;
  
  resourcemanager)
    $scripts/resourcemanager $@
  ;;
  
  nodemanager)
    $scripts/nodemanager $@
  ;;
  
  timelineserver)
    $scripts/timelineserver $@
  ;;
  
  mapredhistoryserver)
    $scripts/mapredhistoryserver $@
  ;;
  
  hmaster)
    $scripts/hmaster $@
  ;;
  
  hregionserver)
    $scripts/hregionserver $@
  ;;

  create)
    $scripts/zookeeper create 1
    $scripts/zookeeper create 2
    $scripts/zookeeper create 3
    
    $scripts/namenode create 1
    $scripts/namenode create 2
    $scripts/zkfc create 1
    $scripts/zkfc create 2
    
    $scripts/datanode create 1
    $scripts/datanode create 2
    $scripts/datanode create 3
    
    echo "Creating /tmp/logs on HDFS to store aggregated logs"
    hadoop fs -mkdir -p /tmp/logs
    
    $scripts/resourcemanager create 1
    $scripts/resourcemanager create 2
    
    $scripts/nodemanager create 1
    $scripts/nodemanager create 2
    $scripts/nodemanager create 3
    
    $scripts/timelineserver create
    
    $scripts/mapredhistoryserver create
    
    $scripts/hmaster create 1
    $scripts/hmaster create 2
    
    $scripts/hregionserver create 1
    $scripts/hregionserver create 2
    $scripts/hregionserver create 3
    
    echo "Creating /spark/event-log and adding spark jars to HDFS"
    hadoop fs -mkdir -p /spark/event-log
    hadoop fs -copyFromLocal $SPARK_HOME/jars /spark
  ;;
  
  start)
    $scripts/zookeeper start 1
    $scripts/zookeeper start 2
    $scripts/zookeeper start 3
    
    $scripts/namenode start 1
    $scripts/namenode start 2
    $scripts/zkfc start 1
    $scripts/zkfc start 2
    
    $scripts/datanode start 1
    $scripts/datanode start 2
    $scripts/datanode start 3
    
    $scripts/resourcemanager start 1
    $scripts/resourcemanager start 2
    
    $scripts/nodemanager start 1
    $scripts/nodemanager start 2
    $scripts/nodemanager start 3
    
    $scripts/timelineserver start
    
    $scripts/mapredhistoryserver start
    
    $scripts/hmaster start 1
    $scripts/hmaster start 2
    
    $scripts/hregionserver start 1
    $scripts/hregionserver start 2
    $scripts/hregionserver start 3
  ;;
  
  stop)
    $scripts/hregionserver stop 3
    $scripts/hregionserver stop 2
    $scripts/hregionserver stop 1
  
    $scripts/hmaster stop 2
    $scripts/hmaster stop 1
  
    $scripts/mapredhistoryserver stop
  
    $scripts/timelineserver stop
  
    $scripts/nodemanager stop 3
    $scripts/nodemanager stop 2
    $scripts/nodemanager stop 1
    
    $scripts/resourcemanager stop 2
    $scripts/resourcemanager stop 1
  
    $scripts/datanode stop 3
    $scripts/datanode stop 2
    $scripts/datanode stop 1
    
    $scripts/zkfc stop 2
    $scripts/zkfc stop 1
    $scripts/namenode stop 2
    $scripts/namenode stop 1
    
    $scripts/zookeeper stop 3
    $scripts/zookeeper stop 2
    $scripts/zookeeper stop 1
  ;;

  delete)
    $scripts/hregionserver delete 3
    $scripts/hregionserver delete 2
    $scripts/hregionserver delete 1
  
    $scripts/hmaster delete 2
    $scripts/hmaster delete 1
    
    $scripts/mapredhistoryserver delete
  
    $scripts/timelineserver delete
   
    $scripts/nodemanager delete 3
    $scripts/nodemanager delete 2
    $scripts/nodemanager delete 1
   
    $scripts/resourcemanager delete 2
    $scripts/resourcemanager delete 1
  
    $scripts/datanode delete 3
    $scripts/datanode delete 2
    $scripts/datanode delete 1
  
    $scripts/zkfc delete 2
    $scripts/zkfc delete 1
    $scripts/namenode delete 2
    $scripts/namenode delete 1
    
    $scripts/zookeeper delete 3
    $scripts/zookeeper delete 2
    $scripts/zookeeper delete 1
  ;;
  
  *)
  echo
  echo "Usage: cluster [COMMAND|COMPONENT] [OPTIONS]"
  echo 
  echo "Available components, components accept options:"
  echo "  zookeeper"
  echo "  namenode"
  echo "  zkfc"
  echo "  datanode"
  echo "  resourcemanager"
  echo "  nodemanager"
  echo "  timelineserver"
  echo "  mapredhistoryserver"
  echo "  hmaster"
  echo "  hregionserver"
  echo 
  echo "Available commands, manipulate the entire cluster:"
  echo "  create"
  echo "  start"
  echo "  stop"
  echo "  delete"
  exit 1
  
esac