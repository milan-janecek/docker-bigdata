#!/bin/bash

component=$(basename $0)
base_dir=$(dirname $0)/../..
source $base_dir/cluster/scripts/functions.sh

if [ $# -lt 1 ]; then
  print_component_usage $component false
  exit 1
fi

command=$1
name=${component}

case "$command" in
  create)
    case "$2" in
      simple|ha|"")
        cluster_config=${2:-simple}
        
        echo "Creating $name"

        # EXPOSED PORTS
        #
        # 10200 - timelineserver rpc port => yarn.timeline-service.address
        # 8188 - timelineserver http ui => yarn.timeline-service.webapp.address

        docker run -dit \
          --name $name \
          --hostname $name.cluster \
          --network=cluster \
          --expose 10200 -p 10200:10200 \
          --expose 8188 -p 8188:8188 \
          --mount source=$name-data,target=/data \
          --mount type=bind,source=$base_dir/software/hadoop/share,target=/share \
          -m 512M --memory-swap 512M \
          -e "YARN_TIMELINESERVER_HEAPSIZE=410" \
          -e "CLUSTER_CONFIG=$cluster_config" \
          hadoop:$HADOOP_VER bash /share/start-timelineserver.sh

        addContainerToHostsFile $name
        ;;
      *)
        print_component_usage $component false
        exit 1
        ;;
    esac
    ;;
  start)
    echo "Starting $name"
    docker container start $name
    ;;
  stop)
    echo "Stopping $name"
    docker container kill $name
    ;;
  delete)
    echo "Deleting $name"
    docker container rm $name
    removeLineContaining $name.cluster /etc/hosts
    docker volume rm $name-data
    ;;
  *)
    print_component_usage $component false
    exit 1
esac