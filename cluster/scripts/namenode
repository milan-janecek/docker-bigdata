#!/bin/bash

component=$(basename $0)
base_dir=$(dirname $0)/../..
source $base_dir/cluster/scripts/functions.sh

if [ $# -lt 2 ]; then
  print_component_usage $component
  exit 1
fi

command=$1
number=$2
name=${component}${number}

case "$command" in
  create)
    case "$3" in
      simple|ha|"")
        cluster_config=${3:-simple}
        
        echo "Creating $name"

        prefix=$number
        let "prefix -= 1"

        if [ "$prefix" -eq "0" ]; then
          prefix=""
        fi

        namenodes=$(docker ps -a | grep namenode)
        if [ -z "$namenodes" ]; then
          docker volume create edits
        fi
        # EXPOSED PORTS
        #
        # 9820 - namenode rpc port => dfs.namenode.rpc-address
        # 9870 - namenode http ui => dfs.namenode.http-address
        #
        # 1st node gets default ports, 2nd node gets ports prefixed by 1 and so on

        docker run -dit \
          --name $name \
          --hostname $name.cluster \
          --network=cluster \
          --expose ${prefix}9820 -p ${prefix}9820:${prefix}9820 \
          --expose ${prefix}9870 -p ${prefix}9870:${prefix}9870 \
          --mount source=$name-data,target=/data \
          --mount source=edits,target=/edits \
          --mount type=bind,source=$base_dir/software/hadoop/share,target=/share \
          -m 512M --memory-swap 512M \
          -e "HADOOP_NAMENODE_OPTS=-Xmx410m" \
          -e "CLUSTER_CONFIG=$cluster_config" \
          hadoop:$HADOOP_VER /share/start-namenode.sh

        ip=$(docker inspect \
          --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \
          $name)

        sudo sh -c "echo $ip $name.cluster >> /etc/hosts"
        echo "Waiting 10 seconds for $name to boot up"
        sleep 10
        ;;
      *)
        print_component_usage $component
        exit 1
        ;;
    esac
    ;;
  start)
    echo "Starting $name"
    docker container start $name
    ;;
  stop)
    zkfc=$(docker ps | grep zkfc$number)
    if [ ! -z "$zkfc" ]; then
      cluster zkfc stop $number
    fi
    echo "Stopping $name"
    docker container kill $name
    ;;
  delete)
    echo "Deleting $name"
    docker container rm $name
    sudo sh -c "sed -i \"/$name.cluster/d\" /etc/hosts"
    docker volume rm $name-data
    namenodes=$(docker ps -a | grep namenode)
    if [ -z "$namenodes" ]; then
      docker volume rm edits
    fi
    ;;
  *)
    print_component_usage $component
    exit 1
esac