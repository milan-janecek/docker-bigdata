#!/bin/bash

component=$(basename $0)

function print_usage() {
  echo
  echo "Usage: $component COMMAND NUMBER"
  echo 
  echo "Available commands:"
  echo 
  echo "  create"
  echo "  start"
  echo "  stop"
  echo "  delete"
}

if [ $# -ne 2 ]; then
  print_usage
  exit 1
fi

base_dir=$(dirname $0)/../..
command=$1
number=$2
name=${component}${number}

case "$command" in
  create)
    echo "Creating $name"

    # EXPOSED PORTS
    #
    # 16000 - the port the hmaster should bind to => hbase.master.port
    # 16010 - hmaster http ui => hbase.master.info.port
    #
    # 1st node gets default ports, 2nd node gets default ports + 1 and so on

    port_inc=$number
    let "port_inc -= 1"

    hmaster_port=16000
    let "hmaster_port += $port_inc"
    hmaster_webui_port=16010
    let "hmaster_webui_port += $port_inc"

    docker run -dit \
      --name $name \
      --hostname $name.cluster \
      --network=cluster \
      --expose $hmaster_port -p $hmaster_port:$hmaster_port \
      --expose $hmaster_webui_port -p $hmaster_webui_port:$hmaster_webui_port \
      --mount source=$name-data,target=/data \
      --mount type=bind,source=$base_dir/software/hbase/share,target=/share \
      --mount type=bind,source=$base_dir/software/hadoop/share,target=/hadoop-share \
      -m 512M --memory-swap 512M \
      -e "HBASE_MASTER_OPTS=-Xmx410m" \
      hbase:${HBASE_VER}_${HADOOP_VER} /share/start-hmaster.sh

    ip=$(docker inspect \
      --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \
      $name)

    sudo sh -c "echo $ip $name.cluster >> /etc/hosts"
  ;;
  start)
    echo "Starting $name"
    docker container start $name
  ;;
  stop)
    echo "Stopping $name"
    docker container kill $name
  ;;
  delete)
    echo "Deleting $name"
    docker container rm $name
    sudo sh -c "sed -i \"/$name.cluster/d\" /etc/hosts"
    docker volume rm $name-data
  ;;
  *)
    print_usage
    exit 1
esac